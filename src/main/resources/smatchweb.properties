#configuration, e.g. limits on memory, contexts, nodes, etc

event.threads=5

# matching task limit. a task can take up to
# 1 async matching thread
#   2 async offline threads
#        1 preprocess thread
#        1 classify thread
#   1 async online thread
#       1 async element-level matching thread + matcher threads (separate pool)
#       1 async structure-level matching thread + matcher threads (separate pool)
#   max 5 threads at once (at preprocessing stage)
# therefore executor pool should have enough threads (5x5) to avoid thread starvation
task.limit=5

# 4 matchers per each task (preprocessor, element- and structure-level matchers)
matcher.task.threads=4
# max matcher threads for all matching tasks.
# each task can spawn up to 2x matcher.task.threads = 8 (preprocessing of contexts) and x by task.limit (5) = 40
matcher.max.threads=40

# node limit, e.g. tasks with no more than 1000x1000 nodes
node.limit=1000

# task result timeout - 10 minutes
task.result.timeout=600000
# task timeout - 60 minutes
task.timeout=3600000